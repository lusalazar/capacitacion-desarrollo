1 ) Paradigma 

Es esencial para tener un paradiga contar con un problama a resolver 

Podemos decir que la FORMA de resolver el problema es un paradigma 

2) Paradigma de programacion

Es un conjunto de Tecnicas o conceptos que se aplican para resolver un problema programando, existen muchos paradigmas 
Ejemplo: 
Paradigma estructurado
Paradigma orientado a objetos 
Paradigma WEB
Paradigma Funcional (LOGICA)

3) Tipos de Paradigmas para resolver un problema 
Caso ejemplo:
aplicacion Web que nos de el resultado de un partido de futbol 
Se pueden utilizar dos tipos de paradigma
a) cliente - servidor
b) Programacion orientada a objeto (POO)
Los paradigmas se pueden combinar en un mismo proyecto dependiendo de las necesidades.
Lenguages que soportan multiples paradigmas de programacion: 
PYTHON (Orientado a objetos, Estructurado, Funcional, [Django]Paradigma web)


4) Caracteristicas de los lenguajes de programacion 
Clasificacion: Alto nivel - Bajo nivel 

5)Lenguajes imperativos y declarativos en programacion
Forma de colocar las intrucciones 
Imperativo: se escribe como se llega a la solucion (nivel inicial)
Declarativa: Se brinda informacion al programa y se utiliza la LOGICA

6) Lenguajes interpretados y compilados en programación
Interpretados: son los que utilizan Interprete (Navegardor = html) este recibe el codigo y lo lee poco a poco (LINEA POR LINEA) y va ejecutando. No mensionan los errores (hoy por hoy suelen decir donde estan los errores)
Son mucho mas Rapido 
Lenguajes ( Python,  Ruby, Javascrit, )

Compilados: los compiladores involucran varios archivos, se realizan analisis semantico, sintactico y otras validaciones. Son mucho mas Lentos, lenguajes (C, C++, ObjectC, Pascal)

7) Lenguaje de programación en Java
Caracteristicas: es un lenguaje que es compilado e interpretado, cuenta con una maquina virtual (es un interprete). Se crea un programa en Java es decir se crea un archivo con extencion .java y le das compilar este genera un archivo que se llama BYTECODE para poder correr la aplicacion se necesita tener la JMV instalada que interpreta el archivo para que se ejecute la aplicacion.

8) Lenguajes del lado del cliente y del lado del servidor
Cliente: Cuando decimos que algo esta del lado del cliente hablamos del Navegador 
Servidor: Peticiones, Corre las funciones de almacenamiento, procesamiento acceso etc, Lenguages del lado del servidor Java Php Pyton Ruby.
la mayoria de los lenguajes de programacion son orientados a objetos 

9)Paradigma de programación estructurado
** Mas conocido 
** Primeras habilidades de un desarrollador 
** Primeros paradigmas de la era moderna 
Se pensaba con un algoritmo y programaba como el programador entendia

Caracteristicas: 
** El codigo inicial esta arriba y el final esta abajo 
** Comprension sencilla
** Dividir en operaciones 
** Modulos referenciales

Secuencias dentro de la programacion 
** Secuenciales : Son las que van en un orden 
** Selectivas : Son las que arrojan un resultado Booleano ( VERDADERO O FALSO)
** Repetitivas : Son tambien llamadas Iterativas, son las que se repiten dependiendo de una condicion.

10) Lenguajes que soportan el paradigma estructurado
C y Pascal 
Python PHP ( Multiparadigmas)

11) Paradigma de programación estructurado, el primer paradigma
Este paradigma con el que cualquier desarrollador debe comenzar, fue con el que se desarrollaron las plataformas mas robustas

12) Ejemplos de problemas con programación estructurada
Limitantes: 
**Tamaño del software 
**Estructura del proyecto 

13) Paradigma orientado a objetos
Sirve para resolver el 99% de los problemas en programacion 
Todo es un objeto 
En la programacion orientada a objetos debemos realizar una descripcion de un objeto antes de poder crearlo 
Es la abstaccion de la realidad 

14)Qué es una clase en programación orientada a objetos
QUE ES UNA CLASE: Es la definicion de un objeto 
antes de crear un objeto se necesita definir una clase

Las clases tienen tres partes primordiales 
Atributos: Son las caracteristicas. Por ejemplo: Edificio
a) numero de pisos
Metodos: Acciones que puede realizar un objeto.
Contructor: es un metodo que se ejecuta cuando creas un objeto, siempre llevan el mismo nombre de la clase.

15) Crear un objeto con programación orientada a objetos
Que se necesita saber para crear un objeto 
Se necesitan saber los parametros indicado y necesario para no crear un objeto diferente 
Que pasa cuando creas un objeto? sencillo se le da vida en programacion el sistema operativo reserva la memoria que necesita para que el objeto pueda estar vivo.

16)El concepto de herencia en programación
Herencia: son las caracteristicas que se desprender de las clases padre por ejemplo cuando se crea un clasa A y una clase B y se podria decir que B es hija de A donde se copia todas las caracteristicas del padre 
Herencia Simplie: cuando las caracteristicas se copian de un solo padre
Herencia Multiple: cuando las caracteristicas provienen de distintas clases 

Ventaja : Permite ahorra tiempo al tener clases ya definidas se aprovecha el codigo 

Desventaja : Cuando se tienen muchas clases se empiezan a generar problemas para seguir la herencia 

17) El polimorfismo en la programación orientada a objetos
Polimorfismo: es que algo pueda adoptar multiples formas funcionando dependiendo de la situacion 
Polimorfismo Dinamico 
Polimorfismo Estatico 

Ventaja : darle mas sentido y logica a lo que hacemos, se pareces mas a la realidad 

18) Ventajas de la programación orientada a objetos
Fortaleza: Reusabilidad, Jerarquias, Mantenimiento, se puede combinar con otros paradigmas 


